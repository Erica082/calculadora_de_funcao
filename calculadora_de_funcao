import flet as ft
import math

# === CLASSES DE FUN√á√ïES ===
class Funcao:
    def __init__(self, nome):
        self.nome = nome

    def lei_formacao(self):
        pass

    def grafico_textual(self):
        pass

    def dominio_imagem(self):
        pass


class FuncaoAfim(Funcao):
    def __init__(self, a, b):
        super().__init__("Fun√ß√£o Afim")
        self.a = a
        self.b = b

    def lei_formacao(self):
        return f"f(x) = {self.a}x + {self.b}"

    def grafico_textual(self):
        if self.a > 0:
            return "O gr√°fico √© uma reta crescente."
        elif self.a < 0:
            return "O gr√°fico √© uma reta decrescente."
        else:
            return "O gr√°fico √© uma reta constante (horizontal)."

    def dominio_imagem(self):
        return "Dom√≠nio: ‚Ñù (todos os reais)\nImagem: ‚Ñù (todos os reais)"

    def calcular(self, x):
        return self.a * x + self.b


class FuncaoQuadratica(Funcao):
    def __init__(self, a, b, c):
        super().__init__("Fun√ß√£o Quadr√°tica")
        self.a = a
        self.b = b
        self.c = c

    def lei_formacao(self):
        return f"f(x) = {self.a}x¬≤ + {self.b}x + {self.c}"

    def grafico_textual(self):
        if self.a > 0:
            return "O gr√°fico √© uma par√°bola voltada para cima."
        elif self.a < 0:
            return "O gr√°fico √© uma par√°bola voltada para baixo."
        else:
            return "N√£o √© uma fun√ß√£o quadr√°tica (a = 0)."

    def dominio_imagem(self):
        return "Dom√≠nio: ‚Ñù (todos os reais)\nImagem: depende da concavidade da par√°bola."

    def calcular(self, x):
        return self.a * x**2 + self.b * x + self.c


class FuncaoExponencial(Funcao):
    def __init__(self, a, b):
        super().__init__("Fun√ß√£o Exponencial")
        self.a = a
        self.b = b

    def lei_formacao(self):
        return f"f(x) = {self.a} * {self.b}^x"

    def grafico_textual(self):
        if self.b > 1:
            return "O gr√°fico √© uma curva crescente."
        elif 0 < self.b < 1:
            return "O gr√°fico √© uma curva decrescente."
        else:
            return "N√£o √© uma fun√ß√£o exponencial v√°lida."

    def dominio_imagem(self):
        return "Dom√≠nio: ‚Ñù (todos os reais)\nImagem: (0, +‚àû)"

    def calcular(self, x):
        return self.a * (self.b ** x)


# === APLICA√á√ÉO FLET ===
def main(page: ft.Page):
    page.title = "Calculadora de Fun√ß√µes com POO"
    page.theme_mode = "dark"
    page.vertical_alignment = "center"
    page.horizontal_alignment = "center"

    # === T√çTULO ===
    titulo = ft.Text("=== CALCULADORA DE FUN√á√ïES COM POO ===", size=25, weight="bold")

    # === IMAGEM DO POU ===
    pou = ft.Image(
        src="https://e7.pngegg.com/pngimages/695/318/png-clipart-pou-android-google-play-bazaar-video-game-smiley-thumbnail.png",  # link direto e confi√°vel
        width=180,
        height=180,
        fit=ft.ImageFit.CONTAIN,
    )

    # === ENTRADAS ===
    tipo_funcao = ft.Dropdown(
        label="Escolha o tipo de fun√ß√£o",
        options=[
            ft.dropdown.Option("Fun√ß√£o Afim"),
            ft.dropdown.Option("Fun√ß√£o Quadr√°tica"),
            ft.dropdown.Option("Fun√ß√£o Exponencial"),
        ]
    )

    entrada_a = ft.TextField(label="Valor de a", width=150)
    entrada_b = ft.TextField(label="Valor de b", width=150)
    entrada_c = ft.TextField(label="Valor de c (apenas quadr√°tica)", width=200)
    entrada_x = ft.TextField(label="Valor de x", width=150)

    # === RESULTADOS ===
    resultado = ft.Text("", size=16, selectable=True)

    # === FUN√á√ÉO DE C√ÅLCULO ===
    def calcular(e):
        try:
            # Define valor padr√£o se o usu√°rio n√£o escolher
            if tipo_funcao.value is None or tipo_funcao.value == "":
                tipo_funcao.value = "Fun√ß√£o Afim"

            a = float(entrada_a.value) if entrada_a.value else 0
            b = float(entrada_b.value) if entrada_b.value else 0
            c = float(entrada_c.value) if entrada_c.value else 0
            x = float(entrada_x.value) if entrada_x.value else 0

            if tipo_funcao.value == "Fun√ß√£o Afim":
                funcao = FuncaoAfim(a, b)
            elif tipo_funcao.value == "Fun√ß√£o Quadr√°tica":
                funcao = FuncaoQuadratica(a, b, c)
            elif tipo_funcao.value == "Fun√ß√£o Exponencial":
                funcao = FuncaoExponencial(a, b)
            else:
                resultado.value = "Tipo de fun√ß√£o inv√°lido."
                page.update()
                return

            f_x = funcao.calcular(x)
            resultado.value = (
                f"üìò {funcao.nome}\n"
                f"üîπ Lei de forma√ß√£o: {funcao.lei_formacao()}\n"
                f"üîπ Gr√°fico textual: {funcao.grafico_textual()}\n"
                f"üîπ Dom√≠nio e imagem:\n{funcao.dominio_imagem()}\n\n"
                f"‚û° Para x = {x}, f(x) = {f_x}"
            )

        except Exception as erro:
            resultado.value = f"‚ö† Erro: {erro}"

        page.update()

    botao = ft.ElevatedButton("Gerar Fun√ß√£o e Calcular", on_click=calcular)

    # === LAYOUT ===
    page.add(
        ft.Column(
            [
                titulo,
                pou,  # imagem do Pou
                tipo_funcao,
                ft.Row([entrada_a, entrada_b, entrada_c, entrada_x], alignment="center"),
                botao,
                resultado
            ],
            alignment="center",
            horizontal_alignment="center",
            spacing=15,
        )
    )

ft.app(target=main)
